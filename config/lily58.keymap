/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        skobochka-round-right {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <31 32>;
        };

        skobochka-round-left {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 27>;
        };

        skobochka-figur-left {
            bindings = <&kp F21>;
            key-positions = <40 39>;
        };

        skobochka-figur-right {
            bindings = <&kp F22>;
            key-positions = <45 46>;
        };

        skobochka-left-square {
            bindings = <&kp F23>;
            key-positions = <29 28>;
        };

        skobochka-right-square {
            bindings = <&kp F24>;
            key-positions = <30 31>;
        };

        tochka {
            bindings = <&kp KP_NUMBER_1>;
            key-positions = <32 33>;
        };

        zapyataya {
            bindings = <&kp KP_NUMBER_2>;
            key-positions = <20 21>;
        };

        ravno {
            bindings = <&kp EQUAL>;
            key-positions = <46 47>;
        };

        qeustion {
            bindings = <&kp KP_NUMBER_3>;
            key-positions = <16 15>;
        };

        swap-ru {
            bindings = <&kp KP_NUMBER_4>;
            key-positions = <43 54>;
        };

        swap_en {
            bindings = <&kp KP_NUMBER_5>;
            key-positions = <42 53>;
        };

        dvoetochie {
            bindings = <&kp F20>;
            key-positions = <27 26>;
        };

        kavichki {
            bindings = <&kp F19>;
            key-positions = <15 14>;
        };

        tire {
            bindings = <&kp MINUS>;
            key-positions = <39 38>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        play_pause: play_pause {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "PLAY_PAUSE";
        };

        scroll_down: scroll_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW &kp DOWN_ARROW>;
            label = "SCROLL_DOWN";
        };

        scroll_up: scroll_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW &kp UP_ARROW>;
            label = "SCROLL_UP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&lt 4 ESCAPE    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                   &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0   &lt 3 EQUAL
&kp TAB         &kp Q         &kp W         &kp E         &kp R         &kp T                                          &kp Y          &kp U         &kp I         &kp O         &kp P          &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A         &kp S         &kp D         &kp F         &kp G                                          &kp H          &kp J         &kp K         &kp L         &kp SEMI       &kp RSHIFT
&kp LSHFT       &kp Z         &kp X         &kp C         &kp V         &kp B             &kp TAB        &kp CAPSLOCK  &kp N          &kp M         &kp COMMA     &kp DOT       &kp KP_DIVIDE  &kp BACKSLASH
                                            &kp LCTRL     &kp LALT      &kp LEFT_COMMAND  &lt 1 ENTER    &lt 2 SPACE   &kp BACKSPACE  &kp DELETE    &kp RGUI
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp GRAVE  &kp F1           &kp F2        &kp F3         &kp F4        &kp F5                                             &kp F6             &kp F7         &kp F8             &kp F9                &kp F10                &none
&none      &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp DOLLAR    &kp PERCENT                                        &kp CARET          &kp AMPERSAND  &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&kp LSHFT  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp NUMBER_5                                       &kp NUMBER_6       &kp NUMBER_7   &kp NUMBER_8       &kp NUMBER_9          &kp NUMBER_0           &kp RSHFT
&none      &none            &none         &kp LS(MINUS)  &none         &kp LS(RIGHT_BRACKET)  &kp F11    &kp F12          &kp SINGLE_QUOTE   &kp MINUS      &kp PLUS           &kp LS(COMMA)         &kp LS(DOT)            &kp PIPE
                                          &trans         &trans        &trans                 &none      &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_COMMAND
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&none      &kp F1        &kp F2              &kp F3         &kp F4         &kp F5                         &kp F6                  &kp F7             &kp F8        &kp F9           &kp F10    &none
&kp GRAVE  &kp F6        &kp F7              &kp F8         &kp F9         &kp F10                        &none                   &none              &kp UP_ARROW  &none            &none      &none
&kp LSHFT  &kp LG(LEFT)  &kp LA(LEFT_ARROW)  &kp LA(RIGHT)  &kp LG(RIGHT)  &none                          &none                   &kp LEFT           &kp DOWN      &kp RIGHT_ARROW  &none      &kp RSHFT
&none      &none         &none               &none          &none          &none      &kp F11    &kp F12  &kp RG(RA(LEFT_ARROW))  &kp RG(RA(RIGHT))  &kp RGUI      &kp RALT         &kp RCTRL  &none
                                             &trans         &trans         &kp LSHFT  &trans     &trans   &trans                  &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        mods {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &none
&none  &none  &none  &none  &none  &none                  &none  &none                 &none                 &none              &none            &none
&none  &none  &none  &none  &none  &none                  &none  &none                 &none                 &none              &none            &none
&none  &none  &none  &none  &none  &none  &none    &none  &none  &none                 &none                 &none              &none            &none
                     &none  &none  &none  &none    &none  &none  &none                 &none
            >;
        };

        music {
            bindings = <
&none  &play_pause  &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none        &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none        &none  &none  &none  &none                  &none  &none  &none  &none  &none  &none
&none  &none        &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none  &none
                           &none  &none  &none  &none    &none  &none  &none  &none
            >;
        };
    };
};
